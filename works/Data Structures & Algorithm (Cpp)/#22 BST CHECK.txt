#include<iostream>
using namespace std;
struct node{
int data;node * left;node *right;
};
class binary{public:node * head;
binary(){head=NULL;}
node * makenode(int inr){
node * first=new node;first->data=inr;if(head==NULL){head=first;}
first->left=NULL;
first->right=NULL;
return first;}
int bst(node * ptr){static node * prev=NULL;
    if(ptr!=NULL){if(!bst(ptr->left)){return 0;}
                    if(prev!=NULL && ptr->data<=prev->data){return 0;}
    prev=ptr;
    return bst(ptr->right);
    }else{return 1;}}
};
int main(){binary tree;
node * one=tree.makenode(10);
node * two=tree.makenode(5);
node * three=tree.makenode(15);
node * four=tree.makenode(12);
node * five=tree.makenode(17);
node * six=tree.makenode(3);
node * seven=tree.makenode(7);
one->left=two;
one->right=three;
three->left=four;
three->right=five;
two->left=six;
two->right=seven;
if(tree.bst(tree.head)){cout<<"BST";}else{cout<<"NOT BST";}
}